{"remainingRequest":"/Users/robink/Desktop/dinnerplanner-html-vue-master/node_modules/babel-loader/lib/index.js!/Users/robink/Desktop/dinnerplanner-html-vue-master/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/robink/Desktop/dinnerplanner-html-vue-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/robink/Desktop/dinnerplanner-html-vue-master/src/components/Dishes.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/robink/Desktop/dinnerplanner-html-vue-master/src/components/Dishes.vue","mtime":1551143403000},{"path":"/Users/robink/Desktop/dinnerplanner-html-vue-master/package.json","mtime":1549803900000},{"path":"/Users/robink/Desktop/dinnerplanner-html-vue-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/robink/Desktop/dinnerplanner-html-vue-master/node_modules/babel-loader/lib/index.js","mtime":1519636541000},{"path":"/Users/robink/Desktop/dinnerplanner-html-vue-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/robink/Desktop/dinnerplanner-html-vue-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport modelInstance from \"../data/DinnerModel\";\nimport Item from \"@/components/Item\";\nexport default {\n  props: [\"model\"],\n  components: {\n    item: Item\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    // when data is retrieved we update it's properties\n    // this will cause the component to re-render\n    modelInstance.getAllDishes().then(function (dishes) {\n      _this.status = \"LOADED\";\n      _this.dishes = dishes.results;\n    }).catch(function () {\n      _this.status = \"ERROR\";\n    });\n    modelInstance.addObserver(this);\n  },\n  data: function data() {\n    return {\n      status: \"LOADING\",\n      dishes: []\n    };\n  },\n  methods: {\n    update: function update(model, changeDetails) {\n      var _this2 = this;\n\n      modelInstance.searchDish().then(function (dishes) {\n        _this2.status = \"LOADED\";\n        _this2.dishes = dishes.results;\n      }).catch(function () {\n        _this2.status = \"ERROR\";\n      });\n    }\n  }\n};",{"version":3,"sources":["Dishes.vue"],"names":[],"mappings":";;;;;;;;;;;;AAaA;AACA;AAEA;UAEA;;UAEA,AACA;AAFA;;AAGA;;AACA;AACA;wDACA;qBACA;4BACA;yBACA;qBACA;AACA;8BACA;AACA;wBACA;;cAEA;cACA,AACA;AAHA;AAIA;;;AAGA;;wDACA;wBACA;+BACA;2BACA;wBACA;AACA;AACA,AACA;AATA;AAvBA","file":"Dishes.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"Dishes\">\n    <h3>Dishes</h3>\n    \n      <em v-if='status === \"LOADING\"'>Loading...</em>\n      <b v-else-if='status === \"ERROR\"'>Failed to load data, please try again</b>\n      <div class=\"dishes\">\n      <item v-for=\"dish in dishes\" :id=\"dish.id\" :key=\"dish.id\" :dish=\"dish\" :model=\"model\"></item>\n      </div>\n  </div>\n</template>\n\n<script>\n  import modelInstance from \"../data/DinnerModel\";\n  import Item from \"@/components/Item\";\n  \n  export default {  \n    props: [\"model\"],\n    components: {\n      item: Item\n    },\n    mounted() {\n      // when data is retrieved we update it's properties\n      // this will cause the component to re-render\n      modelInstance.getAllDishes().then(dishes => {\n        this.status = \"LOADED\"\n        this.dishes = dishes.results\n      }).catch(() => {\n        this.status = \"ERROR\"\n      })\n      modelInstance.addObserver(this);\n    },\n    data() {\n      return {\n        status: \"LOADING\",\n        dishes: []\n      }\n    },\n    methods:{\n      \n      update(model, changeDetails){\n        modelInstance.searchDish().then(dishes => {\n        this.status = \"LOADED\"\n        this.dishes = dishes.results\n      }).catch(() => {\n        this.status = \"ERROR\"\n      })\n      }\n    }\n  }\n</script>\n\n<style>\n\n.dishes {\n  display: flex;\n  flex-flow: wrap;\n  width: 700px;\n  height: 400px;\n  overflow: scroll;\n  padding: 10px;\n}\n\n</style>\n\n\n\n\n\n}"]}]}