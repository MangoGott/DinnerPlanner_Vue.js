{"remainingRequest":"/Users/robink/Desktop/dinnerplanner-html-vue-master/node_modules/babel-loader/lib/index.js!/Users/robink/Desktop/dinnerplanner-html-vue-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/robink/Desktop/dinnerplanner-html-vue-master/src/data/DinnerModel.js","dependencies":[{"path":"/Users/robink/Desktop/dinnerplanner-html-vue-master/src/data/DinnerModel.js","mtime":1551142915000},{"path":"/Users/robink/Desktop/dinnerplanner-html-vue-master/package.json","mtime":1549803900000},{"path":"/Users/robink/Desktop/dinnerplanner-html-vue-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/robink/Desktop/dinnerplanner-html-vue-master/node_modules/babel-loader/lib/index.js","mtime":1519636541000},{"path":"/Users/robink/Desktop/dinnerplanner-html-vue-master/node_modules/eslint-loader/index.js","mtime":1519638534000}],"contextDependencies":[],"result":["import _classCallCheck from \"/Users/robink/Desktop/dinnerplanner-html-vue-master/node_modules/@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"/Users/robink/Desktop/dinnerplanner-html-vue-master/node_modules/@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"/Users/robink/Desktop/dinnerplanner-html-vue-master/node_modules/@babel/runtime/helpers/possibleConstructorReturn\";\nimport _inherits from \"/Users/robink/Desktop/dinnerplanner-html-vue-master/node_modules/@babel/runtime/helpers/inherits\";\nimport ObservableModel from \"./ObservableModel\";\nimport API_KEY from \"./API_KEY.js\";\nvar BASE_URL = \"http://sunset.nada.kth.se:8080/iprog/group/70\";\nvar httpOptions = {\n  headers: {\n    \"X-Mashape-Key\": API_KEY\n  }\n};\n\nvar DinnerModel =\n/*#__PURE__*/\nfunction (_ObservableModel) {\n  _inherits(DinnerModel, _ObservableModel);\n\n  function DinnerModel() {\n    var _this;\n\n    _classCallCheck(this, DinnerModel);\n\n    _this = _possibleConstructorReturn(this, (DinnerModel.__proto__ || Object.getPrototypeOf(DinnerModel)).call(this));\n    _this._numberOfGuests = 4;\n\n    _this.getNumberOfGuests();\n\n    _this.menu = [];\n    _this.type = \"\";\n    _this.filter = \"\";\n    _this.selectedDish;\n    return _this;\n  }\n  /**\n   * Get the number of guests\n   * @returns {number}\n   */\n\n\n  _createClass(DinnerModel, [{\n    key: \"getNumberOfGuests\",\n    value: function getNumberOfGuests() {\n      return this._numberOfGuests;\n    }\n    /**\n     * Set number of guests\n     * @param {number} num\n     */\n\n  }, {\n    key: \"setNumberOfGuests\",\n    value: function setNumberOfGuests(num) {\n      this._numberOfGuests = num; // this.getDish(592479).then(dishX => this.addToMenu(dishX));\n\n      this.notifyObservers();\n    }\n  }, {\n    key: \"getMenu\",\n    value: function getMenu() {\n      return this.menu;\n    }\n  }, {\n    key: \"addMenu\",\n    value: function addMenu(dish) {\n      this.menu.push(dish); //LÄgg till check för dubbletter. \n\n      console.log(this.getMenu());\n      this.notifyObservers();\n    }\n  }, {\n    key: \"setSelectedID\",\n    value: function setSelectedID(id) {\n      this.selectedDish = id;\n      this.notifyObservers();\n    }\n  }, {\n    key: \"getSelectedID\",\n    value: function getSelectedID() {\n      return this.selectedDish;\n    } // API methods\n\n    /**\n     * Do an API call to the search API endpoint.\n     * @returns {Promise<any>}\n     */\n\n  }, {\n    key: \"getAllDishes\",\n    value: function getAllDishes() {\n      var url = \"\".concat(BASE_URL, \"/recipes/search\");\n      return fetch(url, httpOptions).then(this.processResponse);\n    }\n  }, {\n    key: \"searchDish\",\n    value: function searchDish() {\n      var url = \"\".concat(BASE_URL, \"/recipes/search?number=10&offset=0&type='\") + this.type + \"&query=\" + this.filter;\n      return fetch(url, httpOptions).then(this.processResponse);\n    }\n  }, {\n    key: \"setFilter\",\n    value: function setFilter(filter) {\n      this.filter = filter;\n      this.notifyObservers();\n    }\n  }, {\n    key: \"setType\",\n    value: function setType(type) {\n      this.type = type;\n      this.notifyObservers();\n    }\n  }, {\n    key: \"getDish\",\n    value: function getDish(id) {\n      var url = \"\".concat(BASE_URL, \"/recipes/\") + id + \"/information\";\n      return fetch(url, httpOptions).then(this.processResponse);\n    }\n  }, {\n    key: \"processResponse\",\n    value: function processResponse(response) {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw response;\n    }\n  }]);\n\n  return DinnerModel;\n}(ObservableModel); // Export an instance of DinnerModel\n\n\nvar modelInstance = new DinnerModel();\nexport default modelInstance; //TODO ADD BetterNotify and update functions",{"version":3,"sources":["src/data/DinnerModel.js"],"names":["ObservableModel","API_KEY","BASE_URL","httpOptions","headers","DinnerModel","_numberOfGuests","getNumberOfGuests","menu","type","filter","selectedDish","num","notifyObservers","dish","push","console","log","getMenu","id","url","fetch","then","processResponse","response","ok","json","modelInstance"],"mappings":";;;;AAAA,OAAOA,eAAP,MAA4B,mBAA5B;AACA,OAAQC,OAAR,MAAqB,cAArB;AAEA,IAAMC,WAAW,+CAAjB;AACA,IAAMC,cAAc;AAClBC,WAAS;AAAE,qBAAiBH;AAAnB;AADS,CAApB;;IAIMI,W;;;;;AACJ,yBAAc;AAAA;;AAAA;;AACZ;AACA,UAAKC,eAAL,GAAuB,CAAvB;;AACA,UAAKC,iBAAL;;AACA,UAAKC,IAAL,GAAY,EAAZ;AACA,UAAKC,IAAL,GAAY,EAAZ;AACA,UAAKC,MAAL,GAAc,EAAd;AACA,UAAKC,YAAL;AAPY;AAQb;AAED;;;;;;;;wCAIoB;AAClB,aAAO,KAAKL,eAAZ;AACD;AAED;;;;;;;sCAIkBM,G,EAAK;AACrB,WAAKN,eAAL,GAAuBM,GAAvB,CADqB,CAEtB;;AACC,WAAKC,eAAL;AACD;;;8BAES;AACR,aAAO,KAAKL,IAAZ;AACA;;;4BAGMM,I,EAAM;AACZ,WAAKN,IAAL,CAAUO,IAAV,CAAeD,IAAf,EADY,CACU;;AACtBE,cAAQC,GAAR,CAAY,KAAKC,OAAL,EAAZ;AACA,WAAKL,eAAL;AACD;;;kCAEaM,E,EAAI;AAChB,WAAKR,YAAL,GAAoBQ,EAApB;AACA,WAAKN,eAAL;AACD;;;oCAEe;AACd,aAAO,KAAKF,YAAZ;AACD,K,CAGD;;AACA;;;;;;;mCAIe;AACb,UAAMS,gBAASlB,QAAT,oBAAN;AACA,aAAOmB,MAAMD,GAAN,EAAWjB,WAAX,EAAwBmB,IAAxB,CAA6B,KAAKC,eAAlC,CAAP;AACD;;;iCAEY;AACX,UAAMH,MAAM,UAAGlB,QAAH,iDAAwD,KAAKO,IAA7D,eAA+E,KAAKC,MAAhG;AACA,aAAOW,MAAMD,GAAN,EAAWjB,WAAX,EAAwBmB,IAAxB,CAA6B,KAAKC,eAAlC,CAAP;AAED;;;8BAESb,M,EAAO;AACf,WAAKA,MAAL,GAAcA,MAAd;AACA,WAAKG,eAAL;AACD;;;4BAEOJ,I,EAAK;AACX,WAAKA,IAAL,GAAYA,IAAZ;AACA,WAAKI,eAAL;AACD;;;4BAEOM,E,EAAI;AACV,UAAMC,MAAM,UAAGlB,QAAH,iBAAyBiB,EAAzB,iBAAZ;AACA,aAAOE,MAAMD,GAAN,EAAWjB,WAAX,EAAwBmB,IAAxB,CAA6B,KAAKC,eAAlC,CAAP;AACD;;;oCAEeC,Q,EAAU;AACxB,UAAIA,SAASC,EAAb,EAAiB;AACf,eAAOD,SAASE,IAAT,EAAP;AACD;;AACD,YAAMF,QAAN;AACD;;;;EAtFuBxB,e,GAyF1B;;;AACA,IAAM2B,gBAAgB,IAAItB,WAAJ,EAAtB;AACA,eAAesB,aAAf,C,CAIA","file":"/Users/robink/Desktop/dinnerplanner-html-vue-master/src/data/DinnerModel.js","sourceRoot":"/Users/robink/Desktop/dinnerplanner-html-vue-master","sourcesContent":["import ObservableModel from \"./ObservableModel\";\nimport  API_KEY from \"./API_KEY.js\";\n\nconst BASE_URL = \"http://sunset.nada.kth.se:8080/iprog/group/70\";\nconst httpOptions = {\n  headers: { \"X-Mashape-Key\": API_KEY }\n};\n\nclass DinnerModel extends ObservableModel {\n  constructor() {\n    super();\n    this._numberOfGuests = 4;\n    this.getNumberOfGuests();\n    this.menu = [];\n    this.type = \"\";\n    this.filter = \"\"; \n    this.selectedDish;\n  }\n\n  /**\n   * Get the number of guests\n   * @returns {number}\n   */\n  getNumberOfGuests() {\n    return this._numberOfGuests;\n  }\n\n  /**\n   * Set number of guests\n   * @param {number} num\n   */\n  setNumberOfGuests(num) {\n    this._numberOfGuests = num;\n   // this.getDish(592479).then(dishX => this.addToMenu(dishX));\n    this.notifyObservers();\n  }\n\n  getMenu() {\n    return this.menu;\n   }\n\n  \n  addMenu(dish) {\n    this.menu.push(dish); //LÄgg till check för dubbletter. \n    console.log(this.getMenu());\n    this.notifyObservers();\n  }\n  \n  setSelectedID(id) {\n    this.selectedDish = id;\n    this.notifyObservers();\n  }\n\n  getSelectedID() {\n    return this.selectedDish;\n  }\n  \n\n  // API methods\n  /**\n   * Do an API call to the search API endpoint.\n   * @returns {Promise<any>}\n   */\n  getAllDishes() {\n    const url = `${BASE_URL}/recipes/search`;\n    return fetch(url, httpOptions).then(this.processResponse);\n  }\n\n  searchDish() {\n    const url = `${BASE_URL}/recipes/search?number=10&offset=0&type='`+ this.type +`&query=` + this.filter;\n    return fetch(url, httpOptions).then(this.processResponse);\n\n  }\n\n  setFilter(filter){\n    this.filter = filter;\n    this.notifyObservers();\n  }\n\n  setType(type){\n    this.type = type;\n    this.notifyObservers();\n  }\n\n  getDish(id) {\n    const url = `${BASE_URL}/recipes/` + id +`/information`;\n    return fetch(url, httpOptions).then(this.processResponse);\n  }\n\n  processResponse(response) {\n    if (response.ok) {\n      return response.json();\n    }\n    throw response;\n  }\n}\n\n// Export an instance of DinnerModel\nconst modelInstance = new DinnerModel();\nexport default modelInstance;\n\n\n\n//TODO ADD BetterNotify and update functions"]}]}