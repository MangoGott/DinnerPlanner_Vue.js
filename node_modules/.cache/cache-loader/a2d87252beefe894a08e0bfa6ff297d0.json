{"remainingRequest":"/Users/robink/Documents/GitHub/Vue/Vue_Group70/node_modules/babel-loader/lib/index.js!/Users/robink/Documents/GitHub/Vue/Vue_Group70/node_modules/eslint-loader/index.js??ref--13-0!/Users/robink/Documents/GitHub/Vue/Vue_Group70/src/data/ObservableModel.js","dependencies":[{"path":"/Users/robink/Documents/GitHub/Vue/Vue_Group70/src/data/ObservableModel.js","mtime":1551138059000},{"path":"/Users/robink/Documents/GitHub/Vue/Vue_Group70/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/robink/Documents/GitHub/Vue/Vue_Group70/node_modules/babel-loader/lib/index.js","mtime":1519636541000},{"path":"/Users/robink/Documents/GitHub/Vue/Vue_Group70/node_modules/eslint-loader/index.js","mtime":1519638534000}],"contextDependencies":[],"result":["class ObservableModel {\n  constructor() {\n    this._observers = [];\n  }\n\n  addObserver(observer) {\n    this._observers.push(observer);\n  }\n\n  notifyObservers(changeDetails) {\n    this._observers.forEach(observer => {\n      observer.update(this, changeDetails);\n    });\n  }\n\n  removeObserver(observer) {\n    this._observers = this._observers.filter(o => o !== observer);\n  }\n\n}\n\nexport default ObservableModel;",{"version":3,"sources":["src/data/ObservableModel.js"],"names":["ObservableModel","constructor","_observers","addObserver","observer","push","notifyObservers","changeDetails","forEach","update","removeObserver","filter","o"],"mappings":"AAAA,MAAMA,eAAN,CAAsB;AACpBC,gBAAc;AACZ,SAAKC,UAAL,GAAkB,EAAlB;AACD;;AAEDC,cAAYC,QAAZ,EAAsB;AACpB,SAAKF,UAAL,CAAgBG,IAAhB,CAAqBD,QAArB;AACD;;AAEDE,kBAAgBC,aAAhB,EAA+B;AAC7B,SAAKL,UAAL,CAAgBM,OAAhB,CAAwBJ,YAAY;AAClCA,eAASK,MAAT,CAAgB,IAAhB,EAAsBF,aAAtB;AACD,KAFD;AAGD;;AAEDG,iBAAeN,QAAf,EAAyB;AACvB,SAAKF,UAAL,GAAkB,KAAKA,UAAL,CAAgBS,MAAhB,CAAuBC,KAAKA,MAAMR,QAAlC,CAAlB;AACD;;AAjBmB;;AAoBtB,eAAeJ,eAAf","file":"/Users/robink/Documents/GitHub/Vue/Vue_Group70/src/data/ObservableModel.js","sourceRoot":"/Users/robink/Documents/GitHub/Vue/Vue_Group70","sourcesContent":["class ObservableModel {\n  constructor() {\n    this._observers = [];\n  }\n\n  addObserver(observer) {\n    this._observers.push(observer);\n  }\n\n  notifyObservers(changeDetails) {\n    this._observers.forEach(observer => {\n      observer.update(this, changeDetails);\n    });\n  }\n\n  removeObserver(observer) {\n    this._observers = this._observers.filter(o => o !== observer);\n  }\n}\n\nexport default ObservableModel;\n"]}]}