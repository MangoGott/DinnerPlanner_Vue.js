{"remainingRequest":"/Users/robink/Documents/GitHub/Vue/Vue_Group70/node_modules/babel-loader/lib/index.js!/Users/robink/Documents/GitHub/Vue/Vue_Group70/node_modules/eslint-loader/index.js??ref--13-0!/Users/robink/Documents/GitHub/Vue/Vue_Group70/src/data/DinnerModel.js","dependencies":[{"path":"/Users/robink/Documents/GitHub/Vue/Vue_Group70/src/data/DinnerModel.js","mtime":1557320127000},{"path":"/Users/robink/Documents/GitHub/Vue/Vue_Group70/package.json","mtime":1549803900000},{"path":"/Users/robink/Documents/GitHub/Vue/Vue_Group70/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/robink/Documents/GitHub/Vue/Vue_Group70/node_modules/babel-loader/lib/index.js","mtime":1519636541000},{"path":"/Users/robink/Documents/GitHub/Vue/Vue_Group70/node_modules/eslint-loader/index.js","mtime":1519638534000}],"contextDependencies":[],"result":["import _classCallCheck from \"/Users/robink/Documents/GitHub/Vue/Vue_Group70/node_modules/@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"/Users/robink/Documents/GitHub/Vue/Vue_Group70/node_modules/@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"/Users/robink/Documents/GitHub/Vue/Vue_Group70/node_modules/@babel/runtime/helpers/possibleConstructorReturn\";\nimport _inherits from \"/Users/robink/Documents/GitHub/Vue/Vue_Group70/node_modules/@babel/runtime/helpers/inherits\";\nimport ObservableModel from \"./ObservableModel\";\nimport API_KEY from \"./API_KEY.js\";\nvar BASE_URL = \"http://sunset.nada.kth.se:8080/iprog/group/70\";\nvar httpOptions = {\n  headers: {\n    \"X-Mashape-Key\": API_KEY\n  }\n};\n\nvar DinnerModel =\n/*#__PURE__*/\nfunction (_ObservableModel) {\n  _inherits(DinnerModel, _ObservableModel);\n\n  function DinnerModel() {\n    var _this;\n\n    _classCallCheck(this, DinnerModel);\n\n    _this = _possibleConstructorReturn(this, (DinnerModel.__proto__ || Object.getPrototypeOf(DinnerModel)).call(this));\n    _this.type = \"\";\n    _this.filter = \"\";\n    _this.selectedDish;\n\n    if (localStorage.selectedDish) {\n      _this.selectedDish = localStorage.selectedDish;\n    } else {\n      _this.selectedDish = 0;\n    }\n\n    _this.menu;\n\n    if (localStorage.menu) {\n      _this.menu = JSON.parse(localStorage.menu);\n    } else {\n      _this.menu = [];\n    }\n\n    _this.numberOfGuests;\n\n    if (localStorage.numberOfGuests) {\n      _this.numberOfGuests = localStorage.numberOfGuests;\n    } else {\n      _this.numberOfGuests = 2;\n    }\n\n    return _this;\n  }\n  /**\n   * Get the number of guests\n   * @returns {number}\n   */\n\n\n  _createClass(DinnerModel, [{\n    key: \"getNumberOfGuests\",\n    value: function getNumberOfGuests() {\n      return this.numberOfGuests;\n    }\n    /**\n     * Set number of guests\n     * @param {number} num\n     */\n\n  }, {\n    key: \"setNumberOfGuests\",\n    value: function setNumberOfGuests(num) {\n      if (num > 0) {\n        this.numberOfGuests = num;\n        localStorage.numberOfGuests = num; // this.getDish(592479).then(dishX => this.addToMenu(dishX));\n\n        this.notifyObservers(\"changeGuests\");\n      } else {\n        console.log(\"can't have negative guests\");\n      }\n    }\n  }, {\n    key: \"getMenu\",\n    value: function getMenu() {\n      return this.menu;\n    }\n  }, {\n    key: \"addMenu\",\n    value: function addMenu(dish) {\n      var i;\n      var exists = false;\n\n      for (i = 0; i < this.menu.length; i++) {\n        if (this.menu[i].id === dish.id) {\n          exists = true;\n          console.log(\"aldready in menu!!\");\n        }\n      }\n\n      if (!exists) {\n        this.menu.push(dish); //LÄgg till check för dubbletter. Done!\n\n        localStorage.menu = JSON.stringify(this.menu);\n        console.log(\"Added to menu!\");\n        console.log(dish);\n        this.notifyObservers(\"changeMenu\");\n      }\n    }\n  }, {\n    key: \"removeDish\",\n    value: function removeDish(dish) {\n      var i;\n\n      for (i = 0; i < this.menu.length; i++) {\n        if (this.menu[i].id === dish.id) {\n          this.menu.splice(i, 1);\n          localStorage.menu = JSON.stringify(this.menu);\n          console.log(\"removed!\");\n          this.notifyObservers(\"changeMenu\");\n        }\n      }\n    } //Fel objekt skickas in!\n\n  }, {\n    key: \"menuPrice\",\n    value: function menuPrice() {\n      var menu = this.menu;\n      var i;\n      var total = 0;\n\n      for (i = 0; i < this.menu.length; i++) {\n        total += menu[i].pricePerServing; //Kanske måste kolla om PPS finns?\n      }\n\n      return Math.ceil(total * this.numberOfGuests);\n    }\n  }, {\n    key: \"setSelectedDish\",\n    value: function setSelectedDish(id) {\n      this.selectedDish = id;\n      localStorage.selectedDish = id;\n    }\n  }, {\n    key: \"getSelectedDish\",\n    value: function getSelectedDish() {\n      return this.selectedDish;\n    } // API methods\n\n    /**\n     * Do an API call to the search API endpoint.\n     * @returns {Promise<any>}\n     */\n\n  }, {\n    key: \"getAllDishes\",\n    value: function getAllDishes() {\n      var url = \"\".concat(BASE_URL, \"/recipes/search\");\n      return fetch(url, httpOptions).then(this.processResponse);\n    }\n  }, {\n    key: \"searchDish\",\n    value: function searchDish() {\n      var url = \"\".concat(BASE_URL, \"/recipes/search?number=10&offset=0&type='\") + this.type + \"&query=\" + this.filter;\n      return fetch(url, httpOptions).then(this.processResponse);\n    }\n  }, {\n    key: \"setFilter\",\n    value: function setFilter(filter) {\n      this.filter = filter;\n      this.notifyObservers(\"fetch\");\n    }\n  }, {\n    key: \"setType\",\n    value: function setType(type) {\n      this.type = type;\n      this.notifyObservers(\"fetch\");\n    }\n  }, {\n    key: \"getDish\",\n    value: function getDish(id) {\n      var url = \"\".concat(BASE_URL, \"/recipes/\") + id + \"/information\";\n      return fetch(url, httpOptions).then(this.processResponse);\n    }\n  }, {\n    key: \"processResponse\",\n    value: function processResponse(response) {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw response;\n    }\n  }]);\n\n  return DinnerModel;\n}(ObservableModel); // Export an instance of DinnerModel\n\n\nvar modelInstance = new DinnerModel();\nexport default modelInstance; //TODO ADD BetterNotify and update functions",{"version":3,"sources":["src/data/DinnerModel.js"],"names":["ObservableModel","API_KEY","BASE_URL","httpOptions","headers","DinnerModel","type","filter","selectedDish","localStorage","menu","JSON","parse","numberOfGuests","num","notifyObservers","console","log","dish","i","exists","length","id","push","stringify","splice","total","pricePerServing","Math","ceil","url","fetch","then","processResponse","response","ok","json","modelInstance"],"mappings":";;;;AAAA,OAAOA,eAAP,MAA4B,mBAA5B;AACA,OAAQC,OAAR,MAAqB,cAArB;AAEA,IAAMC,WAAW,+CAAjB;AACA,IAAMC,cAAc;AAClBC,WAAS;AAAE,qBAAiBH;AAAnB;AADS,CAApB;;IAIMI,W;;;;;AACJ,yBAAc;AAAA;;AAAA;;AACZ;AACA,UAAKC,IAAL,GAAY,EAAZ;AACA,UAAKC,MAAL,GAAc,EAAd;AACA,UAAKC,YAAL;;AACA,QAAGC,aAAaD,YAAhB,EAA6B;AAC3B,YAAKA,YAAL,GAAoBC,aAAaD,YAAjC;AACD,KAFD,MAEM;AACJ,YAAKA,YAAL,GAAoB,CAApB;AACD;;AAED,UAAKE,IAAL;;AACA,QAAGD,aAAaC,IAAhB,EAAqB;AACnB,YAAKA,IAAL,GAAYC,KAAKC,KAAL,CAAWH,aAAaC,IAAxB,CAAZ;AACD,KAFD,MAEM;AACJ,YAAKA,IAAL,GAAY,EAAZ;AACD;;AAED,UAAKG,cAAL;;AACA,QAAGJ,aAAaI,cAAhB,EAA+B;AAC7B,YAAKA,cAAL,GAAsBJ,aAAaI,cAAnC;AACD,KAFD,MAEM;AACJ,YAAKA,cAAL,GAAsB,CAAtB;AACD;;AAvBW;AA0Bb;AAED;;;;;;;;wCAIoB;AAClB,aAAO,KAAKA,cAAZ;AACD;AAED;;;;;;;sCAIkBC,G,EAAK;AACrB,UAAGA,MAAM,CAAT,EAAW;AACX,aAAKD,cAAL,GAAsBC,GAAtB;AACAL,qBAAaI,cAAb,GAA8BC,GAA9B,CAFW,CAGZ;;AACC,aAAKC,eAAL,CAAqB,cAArB;AACC,OALD,MAKK;AACHC,gBAAQC,GAAR,CAAY,4BAAZ;AACD;AACF;;;8BAES;AACR,aAAO,KAAKP,IAAZ;AACA;;;4BAGMQ,I,EAAM;AAEZ,UAAIC,CAAJ;AACA,UAAIC,SAAS,KAAb;;AAEE,WAAID,IAAI,CAAR,EAAWA,IAAI,KAAKT,IAAL,CAAUW,MAAzB,EAAiCF,GAAjC,EAAqC;AACnC,YAAG,KAAKT,IAAL,CAAUS,CAAV,EAAaG,EAAb,KAAoBJ,KAAKI,EAA5B,EAA+B;AAC7BF,mBAAS,IAAT;AACAJ,kBAAQC,GAAR,CAAY,oBAAZ;AACD;AACF;;AAED,UAAG,CAACG,MAAJ,EAAW;AACT,aAAKV,IAAL,CAAUa,IAAV,CAAeL,IAAf,EADS,CACa;;AACtBT,qBAAaC,IAAb,GAAoBC,KAAKa,SAAL,CAAe,KAAKd,IAApB,CAApB;AACAM,gBAAQC,GAAR,CAAY,gBAAZ;AACAD,gBAAQC,GAAR,CAAYC,IAAZ;AAEA,aAAKH,eAAL,CAAqB,YAArB;AACD;AAEJ;;;+BAGUG,I,EAAK;AACd,UAAIC,CAAJ;;AACE,WAAIA,IAAI,CAAR,EAAWA,IAAI,KAAKT,IAAL,CAAUW,MAAzB,EAAiCF,GAAjC,EAAqC;AACnC,YAAG,KAAKT,IAAL,CAAUS,CAAV,EAAaG,EAAb,KAAoBJ,KAAKI,EAA5B,EAA+B;AAC7B,eAAKZ,IAAL,CAAUe,MAAV,CAAiBN,CAAjB,EAAmB,CAAnB;AACAV,uBAAaC,IAAb,GAAoBC,KAAKa,SAAL,CAAe,KAAKd,IAApB,CAApB;AACAM,kBAAQC,GAAR,CAAY,UAAZ;AACA,eAAKF,eAAL,CAAqB,YAArB;AACD;AACF;AACJ,K,CAGH;;;;gCACa;AACT,UAAIL,OAAO,KAAKA,IAAhB;AACA,UAAIS,CAAJ;AACA,UAAIO,QAAQ,CAAZ;;AACA,WAAIP,IAAI,CAAR,EAAWA,IAAI,KAAKT,IAAL,CAAUW,MAAzB,EAAiCF,GAAjC,EAAqC;AACnCO,iBAAShB,KAAKS,CAAL,EAAQQ,eAAjB,CADmC,CAEnC;AACC;;AACH,aAAOC,KAAKC,IAAL,CAAUH,QAAQ,KAAKb,cAAvB,CAAP;AAED;;;oCACeS,E,EAAG;AACjB,WAAKd,YAAL,GAAoBc,EAApB;AACAb,mBAAaD,YAAb,GAA4Bc,EAA5B;AACD;;;sCACgB;AACf,aAAO,KAAKd,YAAZ;AACD,K,CAGD;;AACA;;;;;;;mCAIe;AACb,UAAMsB,gBAAS5B,QAAT,oBAAN;AACA,aAAO6B,MAAMD,GAAN,EAAW3B,WAAX,EAAwB6B,IAAxB,CAA6B,KAAKC,eAAlC,CAAP;AACD;;;iCAEY;AACX,UAAMH,MAAM,UAAG5B,QAAH,iDAAwD,KAAKI,IAA7D,eAA+E,KAAKC,MAAhG;AACA,aAAOwB,MAAMD,GAAN,EAAW3B,WAAX,EAAwB6B,IAAxB,CAA6B,KAAKC,eAAlC,CAAP;AAED;;;8BAES1B,M,EAAO;AACf,WAAKA,MAAL,GAAcA,MAAd;AACA,WAAKQ,eAAL,CAAqB,OAArB;AACD;;;4BAEOT,I,EAAK;AACX,WAAKA,IAAL,GAAYA,IAAZ;AACA,WAAKS,eAAL,CAAqB,OAArB;AAED;;;4BAEOO,E,EAAI;AACV,UAAMQ,MAAM,UAAG5B,QAAH,iBAAyBoB,EAAzB,iBAAZ;AACA,aAAOS,MAAMD,GAAN,EAAW3B,WAAX,EAAwB6B,IAAxB,CAA6B,KAAKC,eAAlC,CAAP;AACD;;;oCAEeC,Q,EAAU;AACxB,UAAIA,SAASC,EAAb,EAAiB;AACf,eAAOD,SAASE,IAAT,EAAP;AACD;;AACD,YAAMF,QAAN;AACD;;;;EAxJuBlC,e,GA2J1B;;;AACA,IAAMqC,gBAAgB,IAAIhC,WAAJ,EAAtB;AACA,eAAegC,aAAf,C,CAIA","file":"/Users/robink/Documents/GitHub/Vue/Vue_Group70/src/data/DinnerModel.js","sourceRoot":"/Users/robink/Documents/GitHub/Vue/Vue_Group70","sourcesContent":["import ObservableModel from \"./ObservableModel\";\nimport  API_KEY from \"./API_KEY.js\";\n\nconst BASE_URL = \"http://sunset.nada.kth.se:8080/iprog/group/70\";\nconst httpOptions = {\n  headers: { \"X-Mashape-Key\": API_KEY }\n};\n\nclass DinnerModel extends ObservableModel {\n  constructor() {\n    super();    \n    this.type = \"\";\n    this.filter = \"\"; \n    this.selectedDish;\n    if(localStorage.selectedDish){\n      this.selectedDish = localStorage.selectedDish;\n    }else {\n      this.selectedDish = 0;\n    }\n    \n    this.menu;\n    if(localStorage.menu){\n      this.menu = JSON.parse(localStorage.menu);\n    }else {\n      this.menu = [];\n    }\n    \n    this.numberOfGuests;\n    if(localStorage.numberOfGuests){\n      this.numberOfGuests = localStorage.numberOfGuests;\n    }else {\n      this.numberOfGuests = 2; \n    }\n\n\n  }\n\n  /**\n   * Get the number of guests\n   * @returns {number}\n   */\n  getNumberOfGuests() {\n    return this.numberOfGuests;\n  }\n\n  /**\n   * Set number of guests\n   * @param {number} num\n   */\n  setNumberOfGuests(num) {\n    if(num > 0){\n    this.numberOfGuests = num;\n    localStorage.numberOfGuests = num; \n   // this.getDish(592479).then(dishX => this.addToMenu(dishX));\n    this.notifyObservers(\"changeGuests\");\n    }else{\n      console.log(\"can't have negative guests\");\n    }\n  }\n\n  getMenu() {\n    return this.menu;\n   }\n\n  \n  addMenu(dish) {\n\n    let i;\n    let exists = false;\n\n      for(i = 0; i < this.menu.length; i++){\n        if(this.menu[i].id === dish.id){\n          exists = true;\n          console.log(\"aldready in menu!!\");\n        }\n      }\n\n      if(!exists){\n        this.menu.push(dish); //LÄgg till check för dubbletter. Done!\n        localStorage.menu = JSON.stringify(this.menu);\n        console.log(\"Added to menu!\");\n        console.log(dish);\n\n        this.notifyObservers(\"changeMenu\");\n      }\n    \n  }\n\n\n  removeDish(dish){\n    let i;\n      for(i = 0; i < this.menu.length; i++){\n        if(this.menu[i].id === dish.id){\n          this.menu.splice(i,1);\n          localStorage.menu = JSON.stringify(this.menu);\n          console.log(\"removed!\");\n          this.notifyObservers(\"changeMenu\");\n        }\n      }\n  }    \n\n\n//Fel objekt skickas in!\n  menuPrice(){\n    let menu = this.menu;\n    let i; \n    let total = 0;\n    for(i = 0; i < this.menu.length; i++){\n      total += menu[i].pricePerServing;\n      //Kanske måste kolla om PPS finns?\n      }\n    return Math.ceil(total * this.numberOfGuests);\n\n  }\n  setSelectedDish(id){\n    this.selectedDish = id;  \n    localStorage.selectedDish = id;\n  }\n  getSelectedDish(){\n    return this.selectedDish; \n  }\n\n\n  // API methods\n  /**\n   * Do an API call to the search API endpoint.\n   * @returns {Promise<any>}\n   */\n  getAllDishes() {\n    const url = `${BASE_URL}/recipes/search`;\n    return fetch(url, httpOptions).then(this.processResponse);\n  }\n\n  searchDish() {\n    const url = `${BASE_URL}/recipes/search?number=10&offset=0&type='`+ this.type +`&query=` + this.filter;\n    return fetch(url, httpOptions).then(this.processResponse);\n\n  }\n\n  setFilter(filter){\n    this.filter = filter;\n    this.notifyObservers(\"fetch\");\n  }\n\n  setType(type){\n    this.type = type;\n    this.notifyObservers(\"fetch\");\n    \n  }\n\n  getDish(id) {\n    const url = `${BASE_URL}/recipes/` + id +`/information`;\n    return fetch(url, httpOptions).then(this.processResponse);\n  }\n\n  processResponse(response) {\n    if (response.ok) {\n      return response.json();\n    }\n    throw response;\n  }\n}\n\n// Export an instance of DinnerModel\nconst modelInstance = new DinnerModel();\nexport default modelInstance;\n\n\n\n//TODO ADD BetterNotify and update functions"]}]}