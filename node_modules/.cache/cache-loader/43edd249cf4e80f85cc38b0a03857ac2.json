{"remainingRequest":"/Users/robink/Documents/GitHub/Vue/Vue_Group70/node_modules/babel-loader/lib/index.js!/Users/robink/Documents/GitHub/Vue/Vue_Group70/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/robink/Documents/GitHub/Vue/Vue_Group70/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/robink/Documents/GitHub/Vue/Vue_Group70/src/components/DishDetail.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/robink/Documents/GitHub/Vue/Vue_Group70/src/components/DishDetail.vue","mtime":1557324191000},{"path":"/Users/robink/Documents/GitHub/Vue/Vue_Group70/package.json","mtime":1549803900000},{"path":"/Users/robink/Documents/GitHub/Vue/Vue_Group70/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/robink/Documents/GitHub/Vue/Vue_Group70/node_modules/babel-loader/lib/index.js","mtime":1519636541000},{"path":"/Users/robink/Documents/GitHub/Vue/Vue_Group70/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/robink/Documents/GitHub/Vue/Vue_Group70/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// Alternative to passing the moderl as the component property,\n// we can import the model instance directly\nimport Sidebar from '@/components/Sidebar';\nexport default {\n  // this methods is called by Vue lifecycle when the\n  // component is actually shown to the user (mounted to DOM)\n  // that's a good place to call the API and get the data\n  props: [\"model\", \"dishId\"],\n  components: {\n    sidebar: Sidebar\n  },\n  data: function data() {\n    return {\n      status: \"LOADING\",\n      url: \"https://spoonacular.com/recipeImages/\",\n      nrGuest: this.model.getNumberOfGuests(),\n      dish: {},\n      currentDishId: this.model.getSelectedDish()\n    };\n  },\n  created: function created() {\n    this.model.addObserver(this);\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.model.removeObserver(this);\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    // when data is retrieved we update it's properties\n    // this will cause the component to re-render\n    this.status = \"LOADING\";\n    var currentDishId = this.model.getSelectedDish();\n    console.log(\"Current:\" + this.currentDishId);\n    this.model.getDish(this.currentDishId).then(function (elem) {\n      _this.status = \"LOADED\";\n      _this.dish = elem;\n    }).catch(function (error) {\n      _this.status = \"ERROR\"; // alert(\"Couldn't complete fetch :(\" + error);\n    });\n    this.model.addObserver(this);\n  },\n  methods: {\n    update: function update(model, changeDetails) {\n      status = \"LOADING\";\n      this.currentDishId = this.model.getSelectedDish();\n\n      if (changeDetails === \"changeGuests\") {\n        console.log(\"nrGuest UPDATED\");\n        this.nrGuest = this.model.getNumberOfGuests();\n      }\n    },\n    addDish: function addDish() {\n      this.model.addMenu(this.dish);\n    },\n    removeDish: function removeDish() {\n      this.model.removeDish(this.dish);\n    }\n  }\n};",{"version":3,"sources":["DishDetail.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA;AACA;AACA;oBAEA;;AAEA;AACA;AACA;mBACA;;aAEA,AACA;AAFA;wBAGA;;cAEA;WACA;0BACA;YACA;gCACA,AACA;AANA;AAOA;8BACA;2BACA;AACA;0CACA;8BACA;AACA;;AACA;;AACA;AACA;kBACA;mCACA;kCACA;4BACA,oCACA;qBACA;mBACA;AACA;qBAEA,QADA,CAEA;AACA;2BACA;AACA;;kDAEA;eACA;sCAEA;;4CACA;oBACA;kCACA;AACA;AACA;gCACA;8BACA;AACA;sCACA;iCACA;AACA,AACA;AAhBA;AAxCA","file":"DishDetail.vue","sourceRoot":"src/components","sourcesContent":["<template>\n\n<div class=\"detail\">\n    \n    <sidebar :model=\"this.model\"/>\n\n<h2 v-if='status === \"LOADING\"'>LOADING ;)</h2>\n<b v-else-if='status === \"ERROR\"'>Failed to load data, please try again</b>\n\n<div v-else-if='status === \"LOADED\"' class=\"dishdetails\">\n    <h2>{{dish.title}}</h2>\n    <img :src=\"dish.image\">\n    <p> {{dish.instructions}} </p>\n\n     <div class=\"ingredientsContainer\">\n       <h2>Number of guests: {{nrGuest}} </h2>\n\n      <table>\n        <tr v-for=\"dishIng in dish.extendedIngredients\" :key=\"dishIng.id\">\n          <td>{{dishIng.amount * nrGuest}} {{dishIng.unit}}</td>\n          <td> {{dishIng.name}}</td>\n          <td> {{1 * nrGuest + ' SEK'}}</td>\n        </tr>\n\n        <tr>\n          <td> Total cost: </td>\n          <td> {{Math.ceil(dish.pricePerServing * nrGuest)}} SEK</td>\n        </tr>\n      </table>\n</div>\n\n\n  <!-- <p>{{dish}}</p> -->\n    <div class=\"buttons\">\n    <router-link to=\"/search\">\n    <button>Back</button>\n    </router-link>\n    <button class=\"button\" @click=\"addDish\">Add dish to menu</button>\n    <button class=\"button\" @click=\"removeDish\">Remove</button>\n    </div>\n     </div>\n    \n  \n</div>\n\n\n</template>\n\n<script>\n  // Alternative to passing the moderl as the component property,\n  // we can import the model instance directly\n  import Sidebar from '@/components/Sidebar'; \n\n  export default {\n    // this methods is called by Vue lifecycle when the\n    // component is actually shown to the user (mounted to DOM)\n    // that's a good place to call the API and get the data\n    props: [\"model\", \"dishId\"],\n    components: { \n      sidebar:Sidebar\n    },\n    data() {\n      return {\n        status: \"LOADING\",\n        url: \"https://spoonacular.com/recipeImages/\",\n        nrGuest: this.model.getNumberOfGuests(),\n        dish: {},\n        currentDishId: this.model.getSelectedDish()\n        }\n    },\n    created() {\n    this.model.addObserver(this);\n    },\n    beforeDestroy() {\n    this.model.removeObserver(this);\n    },\n    mounted() {\n    // when data is retrieved we update it's properties\n    // this will cause the component to re-render\n    this.status = \"LOADING\"\n    let currentDishId = this.model.getSelectedDish();\n    console.log(\"Current:\" + this.currentDishId);\n    this.model.getDish(this.currentDishId)\n    .then(elem => {\n        this.status = \"LOADED\"\n        this.dish = elem;\n      })\n      .catch((error)  => {\n        this.status = \"ERROR\"\n       // alert(\"Couldn't complete fetch :(\" + error);\n      });\n    this.model.addObserver(this);\n  },\n  methods: {\n    update(model, changeDetails) {  \n      status = \"LOADING\";\n      this.currentDishId = this.model.getSelectedDish();\n      \n      if(changeDetails === \"changeGuests\"){\n      console.log(\"nrGuest UPDATED\");\n      this.nrGuest = this.model.getNumberOfGuests();\n      }\n    },\n    addDish() {\n      this.model.addMenu(this.dish);\n    },\n    removeDish(){\n      this.model.removeDish(this.dish);\n    }\n  }\n};\n\n</script>\n\n<style>\n\n\n.detail{\n\n   display: flex;\n  flex-flow: row;\n  margin: 10px;\n  \n}\n\n.dishdetails{\n  background: black;\n  margin: 10px 10px 0px 10px; \n  padding: 10px;\n  color: white;\n  height: auto;\n  width: 600px;\n}\n\n\n\n</style>\n"]}]}